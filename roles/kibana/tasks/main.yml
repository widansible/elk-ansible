- name: install kibana
  yum:
#    name: /tmp/{{ kibana_package }}
    name: kibana
    state: present

- name: Open firewalld ports 5601 and # redirect 443 to 5601
  shell: |
    firewall-cmd --add-port=5601/tcp
    firewall-cmd --permanent --add-port=5601/tcp
    firewall-cmd --add-service=https
    firewall-cmd --permanent --add-service=https
    firewall-cmd --runtime-to-permanent
    systemctl restart firewalld
#    firewall-cmd --add-masquerade
#    firewall-cmd --permanent --add-masquerade
#    firewall-cmd --permanent --direct --add-rule ipv4 nat OUTPUT 1 -p tcp -d 127.0.0.1 --dport 443 -j REDIRECT --to-ports 5601
#    firewall-cmd --permanent --direct --add-rule ipv6 nat OUTPUT 1 -p tcp -d 127.0.0.1 --dport 443 -j REDIRECT --to-ports 5601
#    firewall-cmd --permanent --direct --add-rule ipv4 nat PREROUTING 1 -p tcp -d {{ ansible_default_ipv4.address }} --dport 443 -j REDIRECT --to-ports 5601
#    firewall-cmd --permanent --direct --add-rule ipv6 nat PREROUTING 1 -p tcp -d {{ ansible_default_ipv4.address }} --dport 443 -j REDIRECT --to-ports 5601

#- name: allow kibana user to bind to privileged ports
#  shell: |
#    setcap 'CAP_NET_BIND_SERVICE=+eip' /usr/share/kibana/node/bin/node

- name: set kibana server address
  lineinfile:
    dest: /etc/kibana/kibana.yml
    regexp: #server.name
    insertafter: "^#server.host"
    line: "server.host: \"{{ ansible_default_ipv4.address }}\""

#- name: set kibana port to 443
#  lineinfile:
#    dest: /etc/kibana/kibana.yml
#    regexp: #server.port
#    insertafter: "^#server.host"
#    line: "server.port: 443"

- name: set elasticsearch node address
  lineinfile:
    dest: /etc/kibana/kibana.yml
    regexp: #elasticsearch.hosts
    insertafter: "^#elasticsearch.hosts"
    line: "elasticsearch.hosts: http://{{ ansible_default_ipv4.address }}:9200"

- name: start kibana service
  systemd:
    name: kibana
    state: started
    enabled: yes
    daemon_reload: yes
